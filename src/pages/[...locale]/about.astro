---
import { i18n } from "astro:config/client";
import { getCollection } from "astro:content";
import Time from "$utils/time";
import Base from "$layouts/Base.astro";
import i18nit from "$i18n";
import { render } from "astro:content";

export async function getStaticPaths() {
	return i18n?.locales.map(locale => ({ params: { locale: locale == i18n?.defaultLocale ? undefined : (locale as string) } }));
}

const { locale = i18n!.defaultLocale } = Astro.params;

const t = i18nit(locale);

const information = await getCollection("information", information => {
	const [language, id] = information.id.split("/");
	information.id = id;
	return language == locale;
});

let introduction = information.find(info => info.id == "introduction");
let roll = information.find(info => info.id == "roll");

const { Content: Introduction } = introduction ? await render(introduction) : ({} as any);
const { Content: Roll } = roll ? await render(roll) : ({} as any);

let chronicle = information.find(info => info.id == "chronicle")?.data;
let chronicles = Object.entries<string[]>(chronicle ?? {})
	.map(([date, events]) => ({ date: new Date(date), events: events ?? [] }))
	.sort((a, b) => b.date.getTime() - a.date.getTime());
---

<style lang="less">
	article {
		div {
			margin-bottom: 2rem;

			h1 {
				margin-bottom: 1rem;

				font-size: 1.8rem;
			}
		}
	}
</style>

<Base title={t("navigation.about")} {locale}>
	<main class="flex flex-col sm:flex-row justify-between gap-2">
		<article class="flex flex-col">
			{
				introduction && (
					<div>
						<h1>{t("about.introduction")}</h1>
						<samp class="markdown">
							<Introduction />
						</samp>
					</div>
				)
			}
			{
				roll && (
					<div>
						<h1>{t("about.roll")}</h1>
						<samp class="markdown">
							<Roll />
						</samp>
					</div>
				)
			}
		</article>
	</main>
</Base>
